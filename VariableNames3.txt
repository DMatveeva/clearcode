7. 
7.1. "Приведите пять примеров правильного именования булевых переменных в вашем коде в формате "было - стало"."
sorted -> isSorted
bankrupted -> isBancrupted
seen -> isMessageSeen
egoist -> isEgoist
check_first -> is_first_hash_fun_zero // Проверка позиции, выдаваемой 1й хэш функцией в фильтре Блума.

7.2. "Найдите несколько подходящих случаев, когда в вашем коде можно использовать типичные имена булевых переменных."
finished -> done
isError -> error

7.3. "Проверьте, правильно ли вы даёте имена индексам циклов. Попробуйте найти случай, когда вместо i j k нагляднее использовать более выразительное имя."
Нашла цикл, где идет итерация по списку объектов Person, где имя счетчика х. Далее вложенный цикл по списку тестов, имя счетчика i. Циклы довольно длинные, со множеством условий, счетчики используются часто и смысл их теряется. Наверное лучше было бы назвать personCount и testCount.

7.4.  "Попробуйте найти в своих решениях два-три случая, когда можно использовать пары имён - антонимы."
В связном списке используем head и tail для обозначения головы и хвоста.
В моей дипломной работе использовались понятия altruist, egoist.


7.5. "Всем ли временным переменным в вашем коде присвоены выразительные имена? Найдите несколько случаев, когда временные переменные надо переименовать, и поищите, возможно, от некоторых временных переменных вам получится вообще полностью избавиться."
Разбираю код, который использовался в моей дипломной работе. Нашла класс, который писался коллегой, думаю что хорошо иллюстрирует, что имя переменной должно соответствовать области видимости. Есть класс ParticipantInfo, он нередко используется. У него есть поля c названиями a, e, g. Мне пришлось найти и прочитать документацию к проекту, чтобы вспомнить, что они определяют, насколько участник соответственно альтруист, эгоист, или действует в интересах своей группы. Думаю, логичнее было бы назвать их altruismСoefficient, egoismСoefficient, groupСoefficient.
Также, нашла например длинный цикл с несколькими вложенными циклами, где вначале определяется переменная типа ParticipantInfo с названием pi. Лучше было ее назвать participantInfo, а то к концу цикла уже сложно вспомнить о чем она, и к тому же слишком напоминает pi из математики.
Обнаружила, что у класса Person из этого же проекта есть поле id, которое в принципе не нужно, т.к. нигде в проекте не работаем с конкретными объектами Person, только с множествами. 
